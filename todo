//TODO - test y solver
//TODO - test T solver
//TODO - test differences matrices for non uniform steps
//TODO - make the padding factor of guessed ode int derived from the step size

//FIXME - find out why your solution is ~ twice as big -- OPACITY??
//FIXME - chech that eos derivatives arent d/dlnT but rly d/dT and such
//FIXME - fix the opacity 
//FIXME - solve the problem of zero dimensional np arrays better than using the [()] operator

//TODO - ask about the direction of integration; is he integrating from bottom up (as schussler rempel suggests?)
//TODO - how am i supposed to do that? If my initial value is for bottom pressure (from inlow), I need also bottom T, but schussler is fixing top temperature?
//TODO - he says that "For the temperature, we have to specify boundary condi-
tions at both ends of the integration domain. At the upper
boundary (z = 0, taken to be the level of Rosseland op-
tical depth unity of the external stratification) we fix the
temperature to a value (typically 3500 K) that is lower
than the temperature expected at the level τ = 2/3 in the
sunspot. At the bottom, we keep the temperature gradient
adiabatic". Tf does "we keep temperature gradient adiabatic" mean?
//TODO - maybe bottom T is the result of the inflow? cuz we have inflow determining new P, but also the inflow has info on density so just call rho T EOS?
//TODO - apparently bárta uses modelS temperatures (see solvers.py integrate_pressure)

//TODO - see if sympy might be better for integration or derivatives 
//TODO - implement the real gradient as actually minimum of radiative and CONVECTIVE not adiabatic (convective is prolly the ∇' from schussler rempel)