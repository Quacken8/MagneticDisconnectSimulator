#!/usr/bin/env python3
"""
interpolates opacity from a table generated by MESA, in particular the "MESA modules outside MESA" thingy
"""

import numpy as np
import constants as c
import pyMesaUtils as pym



# region modelS opacity
modelSPath = "externalData/model_S_new.dat"
modelTs, modelPs, modelKappas = np.loadtxt(modelSPath, skiprows=1, usecols=(1, 2, 4)).T
# given the structure of the data, it's much better for the nearest interpolation algorithm to work on logs and then exp it later
logmodelTs, logmodelPs, logmodelKappas = (
    np.log(modelTs),
    np.log(modelPs),
    np.log(modelKappas),
)
from scipy.interpolate import NearestNDInterpolator

inteprloatedKappas = NearestNDInterpolator(
    list(zip(logmodelTs, logmodelPs)), logmodelKappas
)


def modelSNearestOpacity(
    temperature: float | np.ndarray, pressure: float | np.ndarray
) -> float | np.ndarray:
    """just interpolates using nearest neighbour from the model S kappas"""
    return np.exp(inteprloatedKappas(np.log(temperature), np.log(pressure)))

# endregion

def main():
    """debugging function for this file"""
    


if __name__ == "__main__":
    main()
